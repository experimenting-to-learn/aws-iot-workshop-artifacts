{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation template for various IoT workshops. Creates a Cloud9 instance.",
    "Mappings": {
        "CONFIG": {
            "DEPLOYMENT": {
                "VERSION": "2021-05-14"
            },
            "S3BUCKET": {
                "NAME": "aws-iot-workshop-artifacts"
            },
            "S3PREFIX": {
                "NAME": "resources"
            }
        }
    },
    "Parameters": {
        "C9InstanceType": {
            "Description": "AWS Cloud9 Instance Type.",
            "Default": "t3.medium",
            "Type": "String",
            "MinLength": "3"
        },
        "C9ImageId": {
            "Description": "AWS Cloud9 ImageId.",
            "Default": "amazonlinux-2-x86_64",
            "AllowedValues": [
                "amazonlinux-2-x86_64",
                "ubuntu-18.04-x86_64",
                "ubuntu-22.04-x86_64"
            ],
            "Type": "String"
        },
        "C9StopTime": {
            "Description": "The number of minutes until the running C9 instance is shut down after the environment was last used",
            "Type": "Number",
            "Default": 120,
            "MinValue": 60,
            "MaxValue": 20160
        },
        "C9SecurityGroupId": {
            "Description": "IoT policy",
            "Type": "String"
        },
        "CustomVar1": {
            "Description": "CustomVar1",
            "Type": "String",
            "Default": ""
        },
        "CustomVar2": {
            "Description": "CustomVar2",
            "Type": "String",
            "Default": ""
        },
        "CustomVar3": {
            "Description": "CustomVar3",
            "Type": "String",
            "Default": ""
        },
        "DashboardId": {
            "Description": "Dashboard id",
            "Type": "String",
            "Default": ""
        },
        "GeneratorAssetModelId": {
            "Description": "Generator asset model id",
            "Type": "String",
            "Default": ""
        },
        "GeneratorERAssetModelId": {
            "Description": "Generator edge asset model id",
            "Type": "String",
            "Default": ""
        },
        "GreengrassGroupArn": {
            "Description": "Greengrass Group arn",
            "Type": "String",
            "Default": ""
        },
        "IoTServiceRoleArn": {
            "Description": "IoT policy",
            "Type": "String"
        },
        "IoTPolicy": {
            "Description": "IoT policy",
            "Type": "String",
            "Default": ""
        },
        "LambdaJITRRoleArn": {
            "Description": "Role arn for Lambda JITR function",
            "Type": "String",
            "Default": ""
        },
        "RootStackName": {
            "Description": "Name of the root stack",
            "Type": "String",
            "MinLength": "3"
        },
        "S3BucketArn": {
            "Description": "S3 bucket arn",
            "Type": "String",
            "MinLength": "5"
        },
        "S3BucketName": {
            "Description": "S3 bucket name",
            "Type": "String",
            "MinLength": "5"
        },
        "SiteWiseGatewayId": {
            "Description": "SiteWise gateway id",
            "Type": "String",
            "Default": ""
        },
        "SubnetId": {
            "Description": "SubnetId to launch C9 in",
            "Type": "String",
            "MinLength": "3",
            "AllowedPattern": "^[a-zA-Z0-9-]*$"
        },
        "PortalId": {
            "Description": "ID of a SiteWise portal",
            "Type": "String",
            "Default": ""
        },
        "PortalRoleArn": {
            "Description": "IAM role arn for a SiteWise portal",
            "Type": "String",
            "Default": ""
        },
        "ProjectId": {
            "Description": "ID of a SiteWise project in a portal",
            "Type": "String",
            "Default": ""
        },
        "PowerPlantEdge1AssetId": {
            "Description": "Asset id for the power plant edge 1",
            "Type": "String",
            "Default": ""
        },
        "Workshop": {
            "Description": "Workshop name",
            "Type": "String",
            "Default": ""
        },
        "UserDataScript": {
            "Description": "Name of the user data script for bootstrapping",
            "Type": "String",
            "Default": "c9-al2-user-data.sh"
        }
    },
    "Resources": {
        "C9User": {
            "Type": "AWS::IAM::User"
        },
        "C9UserPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "AWS IoT SiteWise Portal policy",
                "Users": [
                    {
                        "Ref": "C9User"
                    }
                ],
                "Path": "/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "acm:*",
                                "acm-pca:*",
                                "apigateway:*",
                                "cloud9:*",
                                "cloudformation:*",
                                "codebuild:*",
                                "iam:*",
                                "iot:*",
                                "iotsitewise:*",
                                "iotevents:*",
                                "iotanalytics:*",
                                "iotthingsgraph:*",
                                "greengrass:*",
                                "lambda:*",
                                "logs:*",
                                "s3:*",
                                "signer:*",
                                "dynamodb:PutItem",
                                "dynamodb:GetItem",
                                "dynamodb:Scan",
                                "dynamodb:BatchGetItem",
                                "dynamodb:BatchWriteItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:Query",
                                "sso:CreateManagedApplicationInstance",
                                "sso:DeleteManagedApplicationInstance",
                                "sso:DescribeRegisteredRegions"
                            ],
                            "Resource": "*"
                        }
                    ]
                }
            }
        },
        "C9IAMRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "C9InlinePolicy-",
                                    {
                                        "Ref": "AWS::Region"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iot:*",
                                        "iotsitewise:*",
                                        "iotevents:*",
                                        "iotanalytics:*",
                                        "iotthingsgraph:*",
                                        "greengrass:*",
                                        "s3:*",
                                        "signer:*",
                                        "ec2:DescribeInstances",
                                        "ec2:DescribeVolumesModifications",
                                        "ec2:ModifyVolume",
                                        "iam:CreateAccessKey",
                                        "iam:CreateLoginProfile",
                                        "iam:CreateServiceLinkedRole",
                                        "iam:DeleteServiceLinkedRole",
                                        "iam:AttachRolePolicy",
                                        "iam:DetachRolePolicy",
                                        "iam:GetRole",
                                        "iam:GetUser",
                                        "iam:PassRole",
                                        "iam:CreateRole",
                                        "iam:DeleteRole",
                                        "iam:ListUsers",
                                        "lambda:CreateFunction",
                                        "lambda:GetFunction",
                                        "lambda:ListFunctions",
                                        "lambda:DeleteFunction",
                                        "lambda:AddPermission",
                                        "lambda:GetPolicy",
                                        "lambda:UpdateFunctionCode",
                                        "logs:FilterLogEvents",
                                        "dynamodb:PutItem",
                                        "dynamodb:GetItem",
                                        "dynamodb:Scan",
                                        "dynamodb:BatchGetItem",
                                        "dynamodb:BatchWriteItem",
                                        "dynamodb:DeleteItem",
                                        "dynamodb:GetRecords",
                                        "dynamodb:GetShardIterator",
                                        "dynamodb:Query",
                                        "acm:ImportCertificate",
                                        "acm:ListCertificates",
                                        "acm:DescribeCertificate",
                                        "acm:DeleteCertificate",
                                        "acm:GetCertificate",
                                        "cloudformation:CreateChangeSet",
                                        "cloudformation:CreateStack",
                                        "cloudformation:DeleteStack",
                                        "cloudformation:DescribeChangeSet",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:ExecuteChangeSet",
                                        "cloudformation:GetTemplateSummary",
                                        "cloudformation:ListStackResources",
                                        "cloudformation:UpdateStack",
                                        "sso:CreateManagedApplicationInstance",
                                        "sso:DeleteManagedApplicationInstance",
                                        "sso:DescribeRegisteredRegions"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "secretsmanager:CreateSecret"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": "arn:aws:secretsmanager:*:${AWS::AccountId}:secret:demo/SiteWiseEdge*"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
                ],
                "Path": "/service-role/"
            }
        },
        "C9InstanceProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Path": "/service-role/",
                "Roles": [
                    {
                        "Ref": "C9IAMRole"
                    }
                ]
            }
        },
        "C9Instance": {
            "Type": "AWS::Cloud9::EnvironmentEC2",
            "Properties": {
                "Description": "AWS Cloud9 instance for IoT workshops",
                "AutomaticStopTimeMinutes": {
                    "Ref": "C9StopTime"
                },
                "InstanceType": {
                    "Ref": "C9InstanceType"
                },
                "ImageId": {
                    "Ref": "C9ImageId"
                },
                "Name": {
                    "Ref": "RootStackName"
                },
                "SubnetId": {
                    "Ref": "SubnetId"
                }
            }
        },
        "C9BootstrapLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/service-role/",
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "",
                                [
                                    "IoTWSLambdaPolicy-",
                                    {
                                        "Ref": "AWS::Region"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "cloudformation:DescribeStacks",
                                        "cloudformation:DescribeStackEvents",
                                        "cloudformation:DescribeStackResource",
                                        "cloudformation:DescribeStackResources",
                                        "ec2:DescribeInstances",
                                        "ec2:AssociateIamInstanceProfile",
                                        "ec2:DescribeIamInstanceProfileAssociations",
                                        "ec2:DisassociateIamInstanceProfile",
                                        "ec2:ModifyInstanceAttribute",
                                        "ec2:RebootInstances",
                                        "ec2:ReplaceIamInstanceProfileAssociation",
                                        "iam:ListInstanceProfiles",
                                        "iam:PassRole",
                                        "ssm:DescribeInstanceInformation",
                                        "ssm:SendCommand"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:*"
                                    ],
                                    "Resource": [
                                        {
                                            "Ref": "S3BucketArn"
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    {
                                                        "Ref": "S3BucketArn"
                                                    },
                                                    "/*"
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "BootstrapC9InstanceCustom": {
            "Type": "Custom::BootstrapC9InstanceCustom",
            "DependsOn": [
                "C9BootstrapLambdaRole"
            ],
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "BootstrapC9InstanceLambdaFunction",
                        "Arn"
                    ]
                },
                "ARTIFACTS_BUCKET": {
                    "Fn::FindInMap": [
                        "CONFIG",
                        "S3BUCKET",
                        "NAME"
                    ]
                },
                "ARTIFACTS_PREFIX": {
                    "Fn::FindInMap": [
                        "CONFIG",
                        "S3PREFIX",
                        "NAME"
                    ]
                },
                "ARN_IOT_PROVISIONING_ROLE": {
                    "Ref": "IoTServiceRoleArn"
                },
                "ARN_LAMBDA_ROLE": {
                    "Ref": "LambdaJITRRoleArn"
                },
                "C9_INSTANCE_PROFILE_ARN": {
                    "Fn::GetAtt": [
                        "C9InstanceProfile",
                        "Arn"
                    ]
                },
                "C9_INSTANCE_PROFILE_NAME": {
                    "Ref": "C9InstanceProfile"
                },
                "C9_USER_NAME": {
                    "Ref": "C9User"
                },
                "CUSTOM_VAR1": {
                    "Ref": "CustomVar1"
                },
                "CUSTOM_VAR2": {
                    "Ref": "CustomVar2"
                },
                "CUSTOM_VAR3": {
                    "Ref": "CustomVar3"
                },
                "DASHBOARD_ID": {
                    "Ref": "DashboardId"
                },
                "DEPLOYMENT_VERSION": {
                    "Fn::FindInMap": [
                        "CONFIG",
                        "DEPLOYMENT",
                        "VERSION"
                    ]
                },
                "ENVIRONMENT_ID": {
                    "Ref": "C9Instance"
                },
                "GENERATOR_ASSET_MODEL_ID": {
                    "Ref": "GeneratorAssetModelId"
                },
                "GENERATOR_ER_ASSET_MODEL_ID": {
                    "Ref": "GeneratorERAssetModelId"
                },
                "GREENGRASS_GROUP_ARN": {
                    "Ref": "GreengrassGroupArn"
                },
                "IOT_POLICY": {
                    "Ref": "IoTPolicy"
                },
                "REGION": {
                    "Ref": "AWS::Region"
                },
                "S3_BUCKET": {
                    "Ref": "S3BucketName"
                },
                "PORTAL_ID": {
                    "Ref": "PortalId"
                },
                "PORTAL_ROLE": {
                    "Ref": "PortalRoleArn"
                },
                "PROJECT_ID": {
                    "Ref": "ProjectId"
                },
                "POWER_PLANT_EDGE1_ASSET_ID": {
                    "Ref": "PowerPlantEdge1AssetId"
                },
                "SITEWISE_GATEWAY_ID": {
                    "Ref": "SiteWiseGatewayId"
                },
                "SecurityGroupId": {
                    "Ref": "C9SecurityGroupId"
                },
                "STACK_NAME": {
                    "Ref": "RootStackName"
                },
                "WORKSHOP": {
                    "Ref": "Workshop"
                },
                "USER_DATA_SCRIPT": {
                    "Ref": "UserDataScript"
                }
            }
        },
        "BootstrapC9InstanceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Code": {
                    "S3Bucket": {
                        "Fn::Sub": [
                            "${S3Bucket}-${AWS::Region}",
                            {
                                "S3Bucket": {
                                    "Fn::FindInMap": [
                                        "CONFIG",
                                        "S3BUCKET",
                                        "NAME"
                                    ]
                                }
                            }
                        ]
                    },
                    "S3Key": {
                        "Fn::Sub": [
                            "${S3Prefix}/${Version}/src/lambda/c9_bootstrap_lambda.zip",
                            {
                                "S3Prefix": {
                                    "Fn::FindInMap": [
                                        "CONFIG",
                                        "S3PREFIX",
                                        "NAME"
                                    ]
                                },
                                "Version": {
                                    "Fn::FindInMap": [
                                        "CONFIG",
                                        "DEPLOYMENT",
                                        "VERSION"
                                    ]
                                }
                            }
                        ]
                    }
                },
                "Handler": "c9_bootstrap_lambda.lambda_handler",
                "Role": {
                    "Fn::GetAtt": [
                        "C9BootstrapLambdaRole",
                        "Arn"
                    ]
                },
                "Runtime": "python3.11",
                "MemorySize": 256,
                "Timeout": 600
            }
        }
    },
    "Outputs": {
        "AWSCloud9URL": {
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "https://",
                        {
                            "Ref": "AWS::Region"
                        },
                        ".console.aws.amazon.com/cloud9/ide/",
                        {
                            "Ref": "C9Instance"
                        },
                        "?region=",
                        {
                            "Ref": "AWS::Region"
                        }
                    ]
                ]
            }
        },
        "AWSCloud9Id": {
            "Value": {
                "Ref": "C9Instance"
            }
        }
    }
}